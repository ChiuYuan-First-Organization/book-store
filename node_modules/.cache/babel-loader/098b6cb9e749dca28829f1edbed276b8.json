{"ast":null,"code":"import { cartActions } from \"./cart\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://react-http-e32d2-default-rtdb.firebaseio.com/cart.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data.\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartDataz || []));\n    } catch (error) {\n      dispatch(cartActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Fetching cart data failed!\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(cartActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data!\"\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-http-e32d2-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(cartActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(cartActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"sources":["/Users/adam/Downloads/01-starting-project 5/src/store/cart-actions.js"],"names":["cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","cartDataz","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"mappings":"AAAA,SAASA,WAAT,QAA4B,QAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO,MAAOC,QAAP,IAAoB;AACzB,UAAMC,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,CAA5B;;AAIA,UAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;AACD;;AAED,YAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;AAEA,aAAOD,IAAP;AACD,KAZD;;AAcA,QAAI;AACF,YAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;AACAD,MAAAA,QAAQ,CAACF,WAAW,CAACW,WAAZ,CAAwBC,SAAS,IAAI,EAArC,CAAD,CAAR;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdX,MAAAA,QAAQ,CACNF,WAAW,CAACc,gBAAZ,CAA6B;AAC3BC,QAAAA,MAAM,EAAE,OADmB;AAE3BC,QAAAA,KAAK,EAAE,QAFoB;AAG3BC,QAAAA,OAAO,EAAE;AAHkB,OAA7B,CADM,CAAR;AAOD;AACF,GA3BD;AA4BD,CA7BM;AA+BP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;AACpC,SAAO,MAAOjB,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CACNF,WAAW,CAACc,gBAAZ,CAA6B;AAC3BC,MAAAA,MAAM,EAAE,SADmB;AAE3BC,MAAAA,KAAK,EAAE,YAFoB;AAG3BC,MAAAA,OAAO,EAAE;AAHkB,KAA7B,CADM,CAAR;;AAQA,UAAMG,WAAW,GAAG,YAAY;AAC9B,YAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,gEAD0B,EAE1B;AACEgB,QAAAA,MAAM,EAAE,KADV;AAEEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,IAAf;AAFR,OAF0B,CAA5B;;AAQA,UAAI,CAACf,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;AACD;AACF,KAZD;;AAcA,QAAI;AACF,YAAMa,WAAW,EAAjB;AAEAlB,MAAAA,QAAQ,CACNF,WAAW,CAACc,gBAAZ,CAA6B;AAC3BC,QAAAA,MAAM,EAAE,SADmB;AAE3BC,QAAAA,KAAK,EAAE,UAFoB;AAG3BC,QAAAA,OAAO,EAAE;AAHkB,OAA7B,CADM,CAAR;AAOD,KAVD,CAUE,OAAOJ,KAAP,EAAc;AACdX,MAAAA,QAAQ,CACNF,WAAW,CAACc,gBAAZ,CAA6B;AAC3BC,QAAAA,MAAM,EAAE,OADmB;AAE3BC,QAAAA,KAAK,EAAE,QAFoB;AAG3BC,QAAAA,OAAO,EAAE;AAHkB,OAA7B,CADM,CAAR;AAOD;AACF,GA1CD;AA2CD,CA5CM","sourcesContent":["import { cartActions } from \"./cart\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://react-http-e32d2-default-rtdb.firebaseio.com/cart.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data.\");\n      }\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart(cartDataz || []));\n    } catch (error) {\n      dispatch(\n        cartActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Fetching cart data failed!\",\n        })\n      );\n    }\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      cartActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data!\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://react-http-e32d2-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n\n    try {\n      await sendRequest();\n\n      dispatch(\n        cartActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        cartActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed!\",\n        })\n      );\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}