{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  cartIsShown: false,\n  items: []\n};\nconst cartSlice = createSlice({\n  name: 'cartReducer',\n  initialState: initialCartState,\n  reducers: {\n    cartToggle(state) {\n      state.cartIsShown = !state.cartIsShown;\n    },\n\n    addItem(state, action) {\n      console.log('payload : ', action.payload);\n      const existingItemIndex = state.items.findIndex(item => item.title === action.payload.title);\n\n      if (existingItemIndex >= 0) {\n        state.items[existingItemIndex].quantity += action.payload.quantity; // const existingItem = state.items[existingItemIndex];\n        // const updatedItem = {...existingItem, quantity: existingItem.quantity + action.payload.quantity};\n        // state.items = [...state.items, updatedItem];\n        // console.log(updatedItem.quantity);\n\n        console.log(state.items);\n      } else {\n        state.items.push(action.payload);\n        console.log('first added!');\n      }\n    },\n\n    removeItem(state, action) {\n      const existingItemIndex = state.items.findIndex(item => item.title === action.payload.title);\n      const existingItem = state.items[existingItemIndex];\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.title !== action.payload.title);\n      } else {\n        state.items[existingItemIndex].quantity--;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/adam/Downloads/01-starting-project 5/src/store/cart.js"],"names":["createSlice","initialCartState","cartIsShown","items","cartSlice","name","initialState","reducers","cartToggle","state","addItem","action","console","log","payload","existingItemIndex","findIndex","item","title","quantity","push","removeItem","existingItem","filter","cartActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,WAAW,EAAE,KADQ;AAErBC,EAAAA,KAAK,EAAE;AAFc,CAAzB;AAKA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC1BK,EAAAA,IAAI,EAAE,aADoB;AAE1BC,EAAAA,YAAY,EAAEL,gBAFY;AAG1BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,CAACC,KAAD,EAAQ;AACdA,MAAAA,KAAK,CAACP,WAAN,GAAoB,CAACO,KAAK,CAACP,WAA3B;AACH,KAHK;;AAINQ,IAAAA,OAAO,CAACD,KAAD,EAAQE,MAAR,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,MAAM,CAACG,OAAjC;AACA,YAAMC,iBAAiB,GAAGN,KAAK,CAACN,KAAN,CAAYa,SAAZ,CAAsBC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAeP,MAAM,CAACG,OAAP,CAAeI,KAA5D,CAA1B;;AACA,UAAIH,iBAAiB,IAAI,CAAzB,EAA4B;AACxBN,QAAAA,KAAK,CAACN,KAAN,CAAYY,iBAAZ,EAA+BI,QAA/B,IAA2CR,MAAM,CAACG,OAAP,CAAeK,QAA1D,CADwB,CAExB;AACA;AACA;AACA;;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACN,KAAlB;AACH,OAPD,MAOO;AACHM,QAAAA,KAAK,CAACN,KAAN,CAAYiB,IAAZ,CAAiBT,MAAM,CAACG,OAAxB;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;AACJ,KAlBK;;AAmBNQ,IAAAA,UAAU,CAACZ,KAAD,EAAQE,MAAR,EAAgB;AACtB,YAAMI,iBAAiB,GAAGN,KAAK,CAACN,KAAN,CAAYa,SAAZ,CAAsBC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAeP,MAAM,CAACG,OAAP,CAAeI,KAA5D,CAA1B;AACA,YAAMI,YAAY,GAAGb,KAAK,CAACN,KAAN,CAAYY,iBAAZ,CAArB;;AACA,UAAIO,YAAY,CAACH,QAAb,KAA0B,CAA9B,EAAiC;AAC7BV,QAAAA,KAAK,CAACN,KAAN,GAAcM,KAAK,CAACN,KAAN,CAAYoB,MAAZ,CAAmBN,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAeP,MAAM,CAACG,OAAP,CAAeI,KAAzD,CAAd;AACH,OAFD,MAEO;AACHT,QAAAA,KAAK,CAACN,KAAN,CAAYY,iBAAZ,EAA+BI,QAA/B;AACH;AACJ;;AA3BK;AAHgB,CAAD,CAA7B;AAkCA,OAAO,MAAMK,WAAW,GAAGpB,SAAS,CAACqB,OAA9B;AAEP,eAAerB,SAAS,CAACsB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCartState = {\n    cartIsShown: false,\n    items: [],\n};\n\nconst cartSlice = createSlice({\n    name: 'cartReducer',\n    initialState: initialCartState,\n    reducers: {\n        cartToggle(state) {\n            state.cartIsShown = !state.cartIsShown;\n        },\n        addItem(state, action) {\n            console.log('payload : ', action.payload);\n            const existingItemIndex = state.items.findIndex(item => item.title === action.payload.title);\n            if (existingItemIndex >= 0) {\n                state.items[existingItemIndex].quantity += action.payload.quantity;\n                // const existingItem = state.items[existingItemIndex];\n                // const updatedItem = {...existingItem, quantity: existingItem.quantity + action.payload.quantity};\n                // state.items = [...state.items, updatedItem];\n                // console.log(updatedItem.quantity);\n                console.log(state.items);\n            } else {\n                state.items.push(action.payload);\n                console.log('first added!');\n            }\n        },\n        removeItem(state, action) {\n            const existingItemIndex = state.items.findIndex(item => item.title === action.payload.title);\n            const existingItem = state.items[existingItemIndex];\n            if (existingItem.quantity === 1) {\n                state.items = state.items.filter(item => item.title !== action.payload.title);\n            } else {\n                state.items[existingItemIndex].quantity--;\n            }\n        },\n    },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}