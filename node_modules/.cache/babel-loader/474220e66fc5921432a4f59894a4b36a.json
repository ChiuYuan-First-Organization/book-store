{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  cartIsShown: false,\n  notification: null,\n  items: [],\n  changed: false\n};\nconst cartSlice = createSlice({\n  name: \"cartReducer\",\n  initialState: initialCartState,\n  reducers: {\n    cartToggle(state) {\n      state.cartIsShown = !state.cartIsShown;\n    },\n\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message\n      };\n    },\n\n    replaceCart(state, action) {\n      state.items = action.payload;\n    },\n\n    addItem(state, action) {\n      const existingItem = state.items.find(item => item.title === action.payload.title);\n\n      if (existingItem) {\n        existingItem.quantity += action.payload.quantity;\n      } else {\n        state.items.push(action.payload);\n      }\n\n      state.changed = true;\n    },\n\n    removeItem(state, action) {\n      const existingItem = state.items.find(item => item.title === action.payload.title);\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.title !== action.payload.title);\n      } else {\n        existingItem.quantity--;\n      }\n\n      state.changed = true;\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/adam/Downloads/01-starting-project 5/src/store/cart.js"],"names":["createSlice","initialCartState","cartIsShown","notification","items","changed","cartSlice","name","initialState","reducers","cartToggle","state","showNotification","action","status","payload","title","message","replaceCart","addItem","existingItem","find","item","quantity","push","removeItem","filter","cartActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,WAAW,EAAE,KADU;AAEvBC,EAAAA,YAAY,EAAE,IAFS;AAGvBC,EAAAA,KAAK,EAAE,EAHgB;AAIvBC,EAAAA,OAAO,EAAE;AAJc,CAAzB;AAOA,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAE,aADsB;AAE5BC,EAAAA,YAAY,EAAEP,gBAFc;AAG5BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,UAAU,CAACC,KAAD,EAAQ;AAChBA,MAAAA,KAAK,CAACT,WAAN,GAAoB,CAACS,KAAK,CAACT,WAA3B;AACD,KAHO;;AAIRU,IAAAA,gBAAgB,CAACD,KAAD,EAAQE,MAAR,EAAgB;AAC9BF,MAAAA,KAAK,CAACR,YAAN,GAAqB;AACnBW,QAAAA,MAAM,EAAED,MAAM,CAACE,OAAP,CAAeD,MADJ;AAEnBE,QAAAA,KAAK,EAAEH,MAAM,CAACE,OAAP,CAAeC,KAFH;AAGnBC,QAAAA,OAAO,EAAEJ,MAAM,CAACE,OAAP,CAAeE;AAHL,OAArB;AAKD,KAVO;;AAWRC,IAAAA,WAAW,CAACP,KAAD,EAAQE,MAAR,EAAgB;AACvBF,MAAAA,KAAK,CAACP,KAAN,GAAcS,MAAM,CAACE,OAArB;AACH,KAbO;;AAcRI,IAAAA,OAAO,CAACR,KAAD,EAAQE,MAAR,EAAgB;AACrB,YAAMO,YAAY,GAAGT,KAAK,CAACP,KAAN,CAAYiB,IAAZ,CAClBC,IAAD,IAAUA,IAAI,CAACN,KAAL,KAAeH,MAAM,CAACE,OAAP,CAAeC,KADrB,CAArB;;AAGA,UAAII,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,CAACG,QAAb,IAAyBV,MAAM,CAACE,OAAP,CAAeQ,QAAxC;AACD,OAFD,MAEO;AACLZ,QAAAA,KAAK,CAACP,KAAN,CAAYoB,IAAZ,CAAiBX,MAAM,CAACE,OAAxB;AACD;;AACDJ,MAAAA,KAAK,CAACN,OAAN,GAAgB,IAAhB;AACD,KAxBO;;AAyBRoB,IAAAA,UAAU,CAACd,KAAD,EAAQE,MAAR,EAAgB;AACxB,YAAMO,YAAY,GAAGT,KAAK,CAACP,KAAN,CAAYiB,IAAZ,CAClBC,IAAD,IAAUA,IAAI,CAACN,KAAL,KAAeH,MAAM,CAACE,OAAP,CAAeC,KADrB,CAArB;;AAGA,UAAII,YAAY,CAACG,QAAb,KAA0B,CAA9B,EAAiC;AAC/BZ,QAAAA,KAAK,CAACP,KAAN,GAAcO,KAAK,CAACP,KAAN,CAAYsB,MAAZ,CACXJ,IAAD,IAAUA,IAAI,CAACN,KAAL,KAAeH,MAAM,CAACE,OAAP,CAAeC,KAD5B,CAAd;AAGD,OAJD,MAIO;AACLI,QAAAA,YAAY,CAACG,QAAb;AACD;;AACDZ,MAAAA,KAAK,CAACN,OAAN,GAAgB,IAAhB;AACD;;AArCO;AAHkB,CAAD,CAA7B;AA4CA,OAAO,MAAMsB,WAAW,GAAGrB,SAAS,CAACsB,OAA9B;AAEP,eAAetB,SAAS,CAACuB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCartState = {\n  cartIsShown: false,\n  notification: null,\n  items: [],\n  changed: false,\n};\n\nconst cartSlice = createSlice({\n  name: \"cartReducer\",\n  initialState: initialCartState,\n  reducers: {\n    cartToggle(state) {\n      state.cartIsShown = !state.cartIsShown;\n    },\n    showNotification(state, action) {\n      state.notification = {\n        status: action.payload.status,\n        title: action.payload.title,\n        message: action.payload.message,\n      };\n    },\n    replaceCart(state, action) {\n        state.items = action.payload;\n    },\n    addItem(state, action) {\n      const existingItem = state.items.find(\n        (item) => item.title === action.payload.title\n      );\n      if (existingItem) {\n        existingItem.quantity += action.payload.quantity;\n      } else {\n        state.items.push(action.payload);\n      }\n      state.changed = true;\n    },\n    removeItem(state, action) {\n      const existingItem = state.items.find(\n        (item) => item.title === action.payload.title\n      );\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(\n          (item) => item.title !== action.payload.title\n        );\n      } else {\n        existingItem.quantity--;\n      }\n      state.changed = true;\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}