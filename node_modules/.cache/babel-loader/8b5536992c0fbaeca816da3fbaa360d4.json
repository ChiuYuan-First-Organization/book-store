{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  cartIsShown: false,\n  items: []\n};\nconst cartSlice = createSlice({\n  name: 'cartReducer',\n  initialState: initialCartState,\n  reducers: {\n    cartToggle(state) {\n      state.cartIsShown = !state.cartIsShown;\n    },\n\n    addItem(state, action) {\n      const existingItemIndex = state.items.findIndex(item => item.title === action.payload.title);\n\n      if (existingItemIndex >= 0) {\n        const existingItem = state.items[existingItemIndex];\n        const updatedItem = { ...existingItem,\n          quantity: existingItem.quantity + action.payload.quantity\n        };\n        state.items = [...state.items, updatedItem];\n        console.log(updatedItem.quantity);\n        console.log(state);\n      } else {\n        state.items.push(action.payload);\n        console.log('first added!');\n      }\n    },\n\n    removeItem(state, action) {\n      const existingItemIndex = state.items.findIndex(item => item.title === action.payload.title);\n      const existingItem = state.items[existingItemIndex];\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.title !== action.payload.title);\n      } else {\n        state.items[existingItemIndex].quantity--;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/Users/adam/Downloads/01-starting-project 5/src/store/cart.js"],"names":["createSlice","initialCartState","cartIsShown","items","cartSlice","name","initialState","reducers","cartToggle","state","addItem","action","existingItemIndex","findIndex","item","title","payload","existingItem","updatedItem","quantity","console","log","push","removeItem","filter","cartActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,WAAW,EAAE,KADQ;AAErBC,EAAAA,KAAK,EAAE;AAFc,CAAzB;AAKA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC1BK,EAAAA,IAAI,EAAE,aADoB;AAE1BC,EAAAA,YAAY,EAAEL,gBAFY;AAG1BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,CAACC,KAAD,EAAQ;AACdA,MAAAA,KAAK,CAACP,WAAN,GAAoB,CAACO,KAAK,CAACP,WAA3B;AACH,KAHK;;AAINQ,IAAAA,OAAO,CAACD,KAAD,EAAQE,MAAR,EAAgB;AACnB,YAAMC,iBAAiB,GAAGH,KAAK,CAACN,KAAN,CAAYU,SAAZ,CAAsBC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAeJ,MAAM,CAACK,OAAP,CAAeD,KAA5D,CAA1B;;AACA,UAAIH,iBAAiB,IAAI,CAAzB,EAA4B;AACxB,cAAMK,YAAY,GAAGR,KAAK,CAACN,KAAN,CAAYS,iBAAZ,CAArB;AACA,cAAMM,WAAW,GAAG,EAAC,GAAGD,YAAJ;AAAkBE,UAAAA,QAAQ,EAAEF,YAAY,CAACE,QAAb,GAAwBR,MAAM,CAACK,OAAP,CAAeG;AAAnE,SAApB;AACAV,QAAAA,KAAK,CAACN,KAAN,GAAc,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAiBe,WAAjB,CAAd;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYH,WAAW,CAACC,QAAxB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACH,OAND,MAMO;AACHA,QAAAA,KAAK,CAACN,KAAN,CAAYmB,IAAZ,CAAiBX,MAAM,CAACK,OAAxB;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;AACJ,KAhBK;;AAiBNE,IAAAA,UAAU,CAACd,KAAD,EAAQE,MAAR,EAAgB;AACtB,YAAMC,iBAAiB,GAAGH,KAAK,CAACN,KAAN,CAAYU,SAAZ,CAAsBC,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAeJ,MAAM,CAACK,OAAP,CAAeD,KAA5D,CAA1B;AACA,YAAME,YAAY,GAAGR,KAAK,CAACN,KAAN,CAAYS,iBAAZ,CAArB;;AACA,UAAIK,YAAY,CAACE,QAAb,KAA0B,CAA9B,EAAiC;AAC7BV,QAAAA,KAAK,CAACN,KAAN,GAAcM,KAAK,CAACN,KAAN,CAAYqB,MAAZ,CAAmBV,IAAI,IAAIA,IAAI,CAACC,KAAL,KAAeJ,MAAM,CAACK,OAAP,CAAeD,KAAzD,CAAd;AACH,OAFD,MAEO;AACHN,QAAAA,KAAK,CAACN,KAAN,CAAYS,iBAAZ,EAA+BO,QAA/B;AACH;AACJ;;AAzBK;AAHgB,CAAD,CAA7B;AAgCA,OAAO,MAAMM,WAAW,GAAGrB,SAAS,CAACsB,OAA9B;AAEP,eAAetB,SAAS,CAACuB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCartState = {\n    cartIsShown: false,\n    items: [],\n};\n\nconst cartSlice = createSlice({\n    name: 'cartReducer',\n    initialState: initialCartState,\n    reducers: {\n        cartToggle(state) {\n            state.cartIsShown = !state.cartIsShown;\n        },\n        addItem(state, action) {\n            const existingItemIndex = state.items.findIndex(item => item.title === action.payload.title);\n            if (existingItemIndex >= 0) {\n                const existingItem = state.items[existingItemIndex];\n                const updatedItem = {...existingItem, quantity: existingItem.quantity + action.payload.quantity};\n                state.items = [...state.items, updatedItem];\n                console.log(updatedItem.quantity);\n                console.log(state);\n            } else {\n                state.items.push(action.payload);\n                console.log('first added!');\n            }\n        },\n        removeItem(state, action) {\n            const existingItemIndex = state.items.findIndex(item => item.title === action.payload.title);\n            const existingItem = state.items[existingItemIndex];\n            if (existingItem.quantity === 1) {\n                state.items = state.items.filter(item => item.title !== action.payload.title);\n            } else {\n                state.items[existingItemIndex].quantity--;\n            }\n        },\n    },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}