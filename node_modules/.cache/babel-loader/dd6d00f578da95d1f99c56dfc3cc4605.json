{"ast":null,"code":"var _jsxFileName = \"/Users/adam/Desktop/Udemy/React/book-store/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect } from \"react\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { cartActions } from \"./store/cart\";\nimport { sendCartData, fetchCartData } from './store/cart-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const show = useSelector(state => state.cart.cartIsShown);\n  const cart = useSelector(state => state.cart.items);\n  const cartChanged = useSelector(state => state.cart.changed);\n  const notification = useSelector(state => state.cart.notification);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n  useEffect(() => {\n    // const sendCartData = async () => {\n    // dispatch(\n    //   cartActions.showNotification({\n    //     status: \"pending\",\n    //     title: \"Sending...\",\n    //     message: \"Sending cart data!\",\n    //   })\n    // );\n    // const response = await fetch(\n    //   \"https://react-http-e32d2-default-rtdb.firebaseio.com/cart.json\",\n    //   {\n    //     method: \"PUT\",\n    //     body: JSON.stringify(cart),\n    //   }\n    // );\n    // if (!response.ok) {\n    //   throw new Error(\"Sending cart data failed!\");\n    // }\n    // dispatch(\n    //   cartActions.showNotification({\n    //     status: \"success\",\n    //     title: \"Success!\",\n    //     message: \"Sent cart data successfully!\",\n    //   })\n    // );\n    // };\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cartChanged) {\n      dispatch(sendCartData(cart));\n    } // sendCartData().catch((error) => {\n    //   // dispatch(\n    //   //   cartActions.showNotification({\n    //   //     status: \"error\",\n    //   //     title: \"Error!\",\n    //   //     message: \"Sending cart data failed!\",\n    //   //   })\n    //   // );\n    // });\n\n  }, [cart, cartChanged, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      notification: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [show && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"PbyFQC+FLLrdHvO3JTy6d0FvTLM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/adam/Desktop/Udemy/React/book-store/src/App.js"],"names":["Fragment","useEffect","Cart","Layout","Products","Notification","useSelector","useDispatch","cartActions","sendCartData","fetchCartData","isInitial","App","show","state","cart","cartIsShown","items","cartChanged","changed","notification","dispatch"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,sBAA5C;;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,IAAI,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,WAAvB,CAAxB;AACA,QAAMD,IAAI,GAAGT,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWE,KAAvB,CAAxB;AACA,QAAMC,WAAW,GAAGZ,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWI,OAArB,CAA/B;AACA,QAAMC,YAAY,GAAGd,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWK,YAAvB,CAAhC;AAEA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,QAAQ,CAACX,aAAa,EAAd,CAAR;AACD,GAFQ,EAEN,CAACW,QAAD,CAFM,CAAT;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACd;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AAEA,QAAIU,SAAJ,EAAe;AACbA,MAAAA,SAAS,GAAG,KAAZ;AACA;AACD;;AAED,QAAIO,WAAJ,EAAiB;AACfG,MAAAA,QAAQ,CAACZ,YAAY,CAACM,IAAD,CAAb,CAAR;AACD,KArCa,CAuCd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,GAhDQ,EAgDN,CAACA,IAAD,EAAOG,WAAP,EAAoBG,QAApB,CAhDM,CAAT;AAkDA,sBACE,QAAC,QAAD;AAAA,eACGD,YAAY,iBAAI,QAAC,YAAD;AAAc,MAAA,YAAY,EAAEA;AAA5B;AAAA;AAAA;AAAA;AAAA,YADnB,eAEE,QAAC,MAAD;AAAA,iBACGP,IAAI,iBAAI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADX,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAvEQD,G;UACMN,W,EACAA,W,EACOA,W,EACCA,W,EAEJC,W;;;KANVK,G;AAyET,eAAeA,GAAf","sourcesContent":["import { Fragment, useEffect } from \"react\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { cartActions } from \"./store/cart\";\nimport { sendCartData, fetchCartData } from './store/cart-actions';\n\nlet isInitial = true;\n\nfunction App() {\n  const show = useSelector((state) => state.cart.cartIsShown);\n  const cart = useSelector((state) => state.cart.items);\n  const cartChanged = useSelector(state => state.cart.changed);\n  const notification = useSelector((state) => state.cart.notification);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    // const sendCartData = async () => {\n      // dispatch(\n      //   cartActions.showNotification({\n      //     status: \"pending\",\n      //     title: \"Sending...\",\n      //     message: \"Sending cart data!\",\n      //   })\n      // );\n      // const response = await fetch(\n      //   \"https://react-http-e32d2-default-rtdb.firebaseio.com/cart.json\",\n      //   {\n      //     method: \"PUT\",\n      //     body: JSON.stringify(cart),\n      //   }\n      // );\n\n      // if (!response.ok) {\n      //   throw new Error(\"Sending cart data failed!\");\n      // }\n\n      // dispatch(\n      //   cartActions.showNotification({\n      //     status: \"success\",\n      //     title: \"Success!\",\n      //     message: \"Sent cart data successfully!\",\n      //   })\n      // );\n    // };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (cartChanged) {\n      dispatch(sendCartData(cart));\n    }\n\n    // sendCartData().catch((error) => {\n    //   // dispatch(\n    //   //   cartActions.showNotification({\n    //   //     status: \"error\",\n    //   //     title: \"Error!\",\n    //   //     message: \"Sending cart data failed!\",\n    //   //   })\n    //   // );\n    // });\n  }, [cart, cartChanged, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && <Notification notification={notification} />}\n      <Layout>\n        {show && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}